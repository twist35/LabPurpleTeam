# - name: Configurer la locale
#   ansible.builtin.lineinfile:
#     path: /etc/locale.gen
#     line: "en_US.UTF-8 UTF-8"
#     state: present
#   become: yes

- name: Générer la locale
  ansible.builtin.command: locale-gen
  become: yes

- name: Mettre à jour la locale par défaut
  ansible.builtin.command: update-locale LANG=en_US.UTF-8
  become: yes

- name: Vérifier les locales générées
  ansible.builtin.command: locale -a
  register: locale_output
  become: yes

- debug:
    var: locale_output.stdout_lines

- name: Install PostgreSQL packages
  apt:
    name:
      - postgresql
      - python3-psycopg2
    state: present
    update_cache: yes

- name: Ensure PostgreSQL is running
  service:
    name: postgresql
    state: started
    enabled: yes

- name: Set md5 authentication for zabbix user in pg_hba.conf (local)
  lineinfile:
    path: /etc/postgresql/15/main/pg_hba.conf
    regexp: '^local\s+all\s+zabbix\s+'
    line: 'local   all             zabbix                                  md5'
    insertafter: '^#.*TYPE.*DATABASE.*USER.*ADDRESS.*METHOD'
    state: present
  notify: Restart PostgreSQL

- name: Set md5 authentication for zabbix user in pg_hba.conf (host)
  lineinfile:
    path: /etc/postgresql/15/main/pg_hba.conf
    regexp: '^host\s+all\s+zabbix\s+127\.0\.0\.1/32\s+'
    line: 'host    all             zabbix          127.0.0.1/32            md5'
    insertafter: '^#.*TYPE.*DATABASE.*USER.*ADDRESS.*METHOD'
    state: present
  notify: Restart PostgreSQL


- name: Set password for postgres user
  community.postgresql.postgresql_user:
    name: postgres
    password: "postgres"
    role_attr_flags: "SUPERUSER"
    state: present
  become: yes
  become_user: postgres

- name: Create Zabbix DB user
  community.postgresql.postgresql_user:
    name: zabbix
    password: "zabbix"
    state: present
  become: yes
  become_user: postgres

- name: Create Zabbix database
  community.postgresql.postgresql_db:
    name: zabbix
    encoding: UTF8
    state: present
  become: yes
  become_user: postgres

- name: Download Zabbix repo .deb package
  ansible.builtin.get_url:
    url: https://repo.zabbix.com/zabbix/7.0/debian/pool/main/z/zabbix-release/zabbix-release_7.0-1+debian12_all.deb
    dest: /tmp/zabbix-release_7.0.deb

- name: Vérifier si le dépôt Zabbix est déjà installé
  ansible.builtin.stat:
    path: /etc/apt/sources.list.d/zabbix.list
  register: zabbix_repo

- name: Installer le dépôt Zabbix si non présent
  ansible.builtin.apt:
    deb: /tmp/zabbix-release_7.0.deb
    state: present
  when: not zabbix_repo.stat.exists

- name: Run apt update
  ansible.builtin.apt:
    update_cache: yes

- name: Install Zabbix server packages
  ansible.builtin.apt:
    name:
      - zabbix-server-pgsql
      - zabbix-frontend-php
      - zabbix-apache-conf
      - zabbix-sql-scripts
    state: present

- name: Importer le schéma SQL dans la base Zabbix
  ansible.builtin.shell: |
    zcat /usr/share/zabbix-sql-scripts/postgresql/server.sql.gz | PGPASSWORD="zabbix" psql -U zabbix -d zabbix -h localhost
  args:
    executable: /bin/bash
  become: yes
  become_user: postgres

- name: Create Zabbix DB user
  community.postgresql.postgresql_user:
    name: zabbix
    password: "zabbix"
    priv: "zabbix:ALL"
    db: zabbix
    login_user: postgres
    login_password: "postgres"
    login_host: localhost
  become: yes
  become_user: postgres

- name: Include Zabbix server role
  include_role:
    name: community.zabbix.zabbix_server
  vars:
    zabbix_server_db: pgsql
    zabbix_server_pgsql_login_user: zabbix
    zabbix_server_pgsql_login_password: zabbix  
    zabbix_server_pgsql_login_host: localhost
    zabbix_server_pgsql_dbname: zabbix
    zabbix_server_packages:
      - zabbix-server-pgsql
      - zabbix-sql-scripts
